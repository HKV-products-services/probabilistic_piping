[
  {
    "objectID": "reference/ProbPipingFixedWaterlevelSimple.html",
    "href": "reference/ProbPipingFixedWaterlevelSimple.html",
    "title": "ProbPipingFixedWaterlevelSimple",
    "section": "",
    "text": "ProbPipingFixedWaterlevelSimple()\nClass for simple probabilistic piping calculations with a fixed water level.\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\nprogress\nbool\nFlag to indicate if progress should be shown.\n\n\ndebug\nbool\nFlag to indicate if debug information should be printed.\n\n\nrel_stochasts\nRelevantStochasts\nRelevant stochastic variables for different types of analyses.\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nfixed_waterlevel_failureprobability\nCalculate the failure probability for a fixed water level.\n\n\nfixed_waterlevel_fragilitycurve\nCalculate the fragility curve for a fixed water level.\n\n\nfixed_waterlevel_semiprob\nPerform semi-probabilistic calculations for a constant water level.\n\n\n\n\n\nProbPipingFixedWaterlevelSimple.fixed_waterlevel_failureprobability(\n    prob_input,\n    h=None,\n    settings=None,\n    copula=None,\n    leave=True,\n)\nCalculate the failure probability for a fixed water level.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nprob_input\nProbInput\nProbabilistic input settings.\nrequired\n\n\nh\nfloat or None\nWater level, by default None.\nNone\n\n\nsettings\nPipingSettings or None\nPiping settings, by default None.\nNone\n\n\ncopula\not.Distribution or None\nCopula distribution, by default None.\nNone\n\n\nleave\nbool\nIf True, remove the progress bar, by default True\nTrue\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\ntuple\nUpdated settings and results for uplift, heave, Sellmeijer, and combined mechanisms.\n\n\n\n\n\n\n\nProbPipingFixedWaterlevelSimple.fixed_waterlevel_fragilitycurve(\n    prob_input,\n    hlist=None,\n    settings=None,\n    copula=None,\n)\nCalculate the fragility curve for a fixed water level.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nprob_input\nProbInput\nProbabilistic input settings.\nrequired\n\n\nhlist\nlist of float or None\nList of water levels, by default None.\nNone\n\n\nsettings\nPipingSettings or None\nPiping settings, by default None.\nNone\n\n\ncopula\not.Distribution or None\nCopula distribution, by default None.\nNone\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nProbResults\nResults of the fragility curve calculations.\n\n\n\n\n\n\n\nProbPipingFixedWaterlevelSimple.fixed_waterlevel_semiprob(\n    prob_input,\n    settings=None,\n    h=None,\n)\nPerform semi-probabilistic calculations for a constant water level.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nprob_input\nProbInput\nProbabilistic input settings.\nrequired\n\n\nsettings\nPipingSettings or None\nPiping settings, by default None.\nNone\n\n\nh\nfloat or None\nWater level, by default None.\nNone\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\npd.DataFrame\nDataFrame containing the results of the calculations."
  },
  {
    "objectID": "reference/ProbPipingFixedWaterlevelSimple.html#attributes",
    "href": "reference/ProbPipingFixedWaterlevelSimple.html#attributes",
    "title": "ProbPipingFixedWaterlevelSimple",
    "section": "",
    "text": "Name\nType\nDescription\n\n\n\n\nprogress\nbool\nFlag to indicate if progress should be shown.\n\n\ndebug\nbool\nFlag to indicate if debug information should be printed.\n\n\nrel_stochasts\nRelevantStochasts\nRelevant stochastic variables for different types of analyses."
  },
  {
    "objectID": "reference/ProbPipingFixedWaterlevelSimple.html#methods",
    "href": "reference/ProbPipingFixedWaterlevelSimple.html#methods",
    "title": "ProbPipingFixedWaterlevelSimple",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nfixed_waterlevel_failureprobability\nCalculate the failure probability for a fixed water level.\n\n\nfixed_waterlevel_fragilitycurve\nCalculate the fragility curve for a fixed water level.\n\n\nfixed_waterlevel_semiprob\nPerform semi-probabilistic calculations for a constant water level.\n\n\n\n\n\nProbPipingFixedWaterlevelSimple.fixed_waterlevel_failureprobability(\n    prob_input,\n    h=None,\n    settings=None,\n    copula=None,\n    leave=True,\n)\nCalculate the failure probability for a fixed water level.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nprob_input\nProbInput\nProbabilistic input settings.\nrequired\n\n\nh\nfloat or None\nWater level, by default None.\nNone\n\n\nsettings\nPipingSettings or None\nPiping settings, by default None.\nNone\n\n\ncopula\not.Distribution or None\nCopula distribution, by default None.\nNone\n\n\nleave\nbool\nIf True, remove the progress bar, by default True\nTrue\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\ntuple\nUpdated settings and results for uplift, heave, Sellmeijer, and combined mechanisms.\n\n\n\n\n\n\n\nProbPipingFixedWaterlevelSimple.fixed_waterlevel_fragilitycurve(\n    prob_input,\n    hlist=None,\n    settings=None,\n    copula=None,\n)\nCalculate the fragility curve for a fixed water level.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nprob_input\nProbInput\nProbabilistic input settings.\nrequired\n\n\nhlist\nlist of float or None\nList of water levels, by default None.\nNone\n\n\nsettings\nPipingSettings or None\nPiping settings, by default None.\nNone\n\n\ncopula\not.Distribution or None\nCopula distribution, by default None.\nNone\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nProbResults\nResults of the fragility curve calculations.\n\n\n\n\n\n\n\nProbPipingFixedWaterlevelSimple.fixed_waterlevel_semiprob(\n    prob_input,\n    settings=None,\n    h=None,\n)\nPerform semi-probabilistic calculations for a constant water level.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nprob_input\nProbInput\nProbabilistic input settings.\nrequired\n\n\nsettings\nPipingSettings or None\nPiping settings, by default None.\nNone\n\n\nh\nfloat or None\nWater level, by default None.\nNone\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\npd.DataFrame\nDataFrame containing the results of the calculations."
  },
  {
    "objectID": "reference/PipingSettings.html",
    "href": "reference/PipingSettings.html",
    "title": "PipingSettings",
    "section": "",
    "text": "PipingSettings()\nA dataclass to store various settings and parameters related to piping calculations.\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\nt_norm\nfloat or np.ndarray\nTerugkeertijd norm voor de berekening (alleen voor semiprob).\n\n\nh\nfloat or np.ndarray\nBuitenwaterstand [m+NAP].\n\n\nh_exit\nfloat or np.ndarray\nKwelslootpeil bij uitgang [m+NAP].\n\n\nD\nfloat or np.ndarray\nDikte watervoerende laag [m].\n\n\nD_cover\nfloat or np.ndarray\nDikte deklaag [m].\n\n\nD_vl\nfloat or np.ndarray\nDikte deklaag voorland [m].\n\n\nD_al\nfloat or np.ndarray\nDikte deklaag achterland [m].\n\n\nk\nfloat or np.ndarray\nDoorlatendheid deklaag [m/s].\n\n\nk_vl\nfloat or np.ndarray\nDoorlatendheid voorland [m/s].\n\n\nk_al\nfloat or np.ndarray\nDoorlatendheid achterland [m/s].\n\n\ncv_vl\nfloat or np.ndarray\nconsolidatiecoëfficiënt klei voorland [m^2/s].\n\n\ncv_al\nfloat or np.ndarray\nconsolidatiecoëfficiënt klei achterland [m^2/s].\n\n\nb\nfloat or np.ndarray\nb-waarde in TRWD model 4D (halve breedte rivierbed) [m]\n\n\nn_aq\nfloat or np.ndarray\nPorositeit van de aquifer [-].\n\n\nL\nfloat or np.ndarray\nKwelweglengte [m].\n\n\nL_vl\nfloat or np.ndarray\nLengte voorland [m].\n\n\nL_al\nfloat or np.ndarray\nLengte achterland [m].\n\n\ngamma_sat\nfloat or np.ndarray\nVerzadigd gewicht deklaag, gewogen gemiddelde voor meerdere lagen. [kN/m^3].\n\n\nr_exit\nfloat or np.ndarray\nDempingsfactor bij uitgang (dempingsfactor over de afstand intredepunt-uittredepunt) [-].\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\ncopy\nCreate a copy of the current PipingSettings object.\n\n\nget_partial_settings\nGet a partial settings object for the i-th slice.\n\n\nget_settings_as_dict\nGet the settings as a dictionary.\n\n\nset_param\nSet a single parameter.\n\n\nset_params_fromdict\nSet parameters from a dictionary.\n\n\nverify_integrity\nVerify the integrity of the parameters by ensuring they are numpy arrays and have consistent sizes.\n\n\n\n\n\nPipingSettings.copy(verify_integrity=True)\nCreate a copy of the current PipingSettings object.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nverify_integrity\nbool\nWhether to verify the integrity of the parameters after copying, by default True.\nTrue\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nPipingSettings\nA new instance of PipingSettings with copied parameters.\n\n\n\n\n\n\n\nPipingSettings.get_partial_settings(i, verify_integrity=True)\nGet a partial settings object for the i-th slice.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ni\nint\nThe index of the slice to extract.\nrequired\n\n\nverify_integrity\nbool\nWhether to verify the integrity of the parameters after extraction, by default True.\nTrue\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nPipingSettings\nA new instance of PipingSettings with the i-th slice of parameters.\n\n\n\n\n\n\n\nPipingSettings.get_settings_as_dict()\nGet the settings as a dictionary.\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\ndict\nA dictionary containing the parameter names and their values.\n\n\n\n\n\n\n\nPipingSettings.set_param(attr, val, verify_integrity=True)\nSet a single parameter.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nattr\nstr\nThe name of the attribute to set.\nrequired\n\n\nval\nfloat or np.ndarray\nThe value to set for the attribute.\nrequired\n\n\nverify_integrity\nbool\nWhether to verify the integrity of the parameters after setting them, by default True.\nTrue\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nValueError\nIf the attribute name is unknown.\n\n\n\n\n\n\n\nPipingSettings.set_params_fromdict(piping_dict, verify_integrity=True)\nSet parameters from a dictionary.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\npiping_dict\ndict\nDictionary containing parameter names and their values.\nrequired\n\n\nverify_integrity\nbool\nWhether to verify the integrity of the parameters after setting them, by default True.\nTrue\n\n\n\n\n\n\n\nPipingSettings.verify_integrity()\nVerify the integrity of the parameters by ensuring they are numpy arrays and have consistent sizes.\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nValueError\nIf any parameter has more than one dimension."
  },
  {
    "objectID": "reference/PipingSettings.html#attributes",
    "href": "reference/PipingSettings.html#attributes",
    "title": "PipingSettings",
    "section": "",
    "text": "Name\nType\nDescription\n\n\n\n\nt_norm\nfloat or np.ndarray\nTerugkeertijd norm voor de berekening (alleen voor semiprob).\n\n\nh\nfloat or np.ndarray\nBuitenwaterstand [m+NAP].\n\n\nh_exit\nfloat or np.ndarray\nKwelslootpeil bij uitgang [m+NAP].\n\n\nD\nfloat or np.ndarray\nDikte watervoerende laag [m].\n\n\nD_cover\nfloat or np.ndarray\nDikte deklaag [m].\n\n\nD_vl\nfloat or np.ndarray\nDikte deklaag voorland [m].\n\n\nD_al\nfloat or np.ndarray\nDikte deklaag achterland [m].\n\n\nk\nfloat or np.ndarray\nDoorlatendheid deklaag [m/s].\n\n\nk_vl\nfloat or np.ndarray\nDoorlatendheid voorland [m/s].\n\n\nk_al\nfloat or np.ndarray\nDoorlatendheid achterland [m/s].\n\n\ncv_vl\nfloat or np.ndarray\nconsolidatiecoëfficiënt klei voorland [m^2/s].\n\n\ncv_al\nfloat or np.ndarray\nconsolidatiecoëfficiënt klei achterland [m^2/s].\n\n\nb\nfloat or np.ndarray\nb-waarde in TRWD model 4D (halve breedte rivierbed) [m]\n\n\nn_aq\nfloat or np.ndarray\nPorositeit van de aquifer [-].\n\n\nL\nfloat or np.ndarray\nKwelweglengte [m].\n\n\nL_vl\nfloat or np.ndarray\nLengte voorland [m].\n\n\nL_al\nfloat or np.ndarray\nLengte achterland [m].\n\n\ngamma_sat\nfloat or np.ndarray\nVerzadigd gewicht deklaag, gewogen gemiddelde voor meerdere lagen. [kN/m^3].\n\n\nr_exit\nfloat or np.ndarray\nDempingsfactor bij uitgang (dempingsfactor over de afstand intredepunt-uittredepunt) [-]."
  },
  {
    "objectID": "reference/PipingSettings.html#methods",
    "href": "reference/PipingSettings.html#methods",
    "title": "PipingSettings",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\ncopy\nCreate a copy of the current PipingSettings object.\n\n\nget_partial_settings\nGet a partial settings object for the i-th slice.\n\n\nget_settings_as_dict\nGet the settings as a dictionary.\n\n\nset_param\nSet a single parameter.\n\n\nset_params_fromdict\nSet parameters from a dictionary.\n\n\nverify_integrity\nVerify the integrity of the parameters by ensuring they are numpy arrays and have consistent sizes.\n\n\n\n\n\nPipingSettings.copy(verify_integrity=True)\nCreate a copy of the current PipingSettings object.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nverify_integrity\nbool\nWhether to verify the integrity of the parameters after copying, by default True.\nTrue\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nPipingSettings\nA new instance of PipingSettings with copied parameters.\n\n\n\n\n\n\n\nPipingSettings.get_partial_settings(i, verify_integrity=True)\nGet a partial settings object for the i-th slice.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ni\nint\nThe index of the slice to extract.\nrequired\n\n\nverify_integrity\nbool\nWhether to verify the integrity of the parameters after extraction, by default True.\nTrue\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nPipingSettings\nA new instance of PipingSettings with the i-th slice of parameters.\n\n\n\n\n\n\n\nPipingSettings.get_settings_as_dict()\nGet the settings as a dictionary.\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\ndict\nA dictionary containing the parameter names and their values.\n\n\n\n\n\n\n\nPipingSettings.set_param(attr, val, verify_integrity=True)\nSet a single parameter.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nattr\nstr\nThe name of the attribute to set.\nrequired\n\n\nval\nfloat or np.ndarray\nThe value to set for the attribute.\nrequired\n\n\nverify_integrity\nbool\nWhether to verify the integrity of the parameters after setting them, by default True.\nTrue\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nValueError\nIf the attribute name is unknown.\n\n\n\n\n\n\n\nPipingSettings.set_params_fromdict(piping_dict, verify_integrity=True)\nSet parameters from a dictionary.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\npiping_dict\ndict\nDictionary containing parameter names and their values.\nrequired\n\n\nverify_integrity\nbool\nWhether to verify the integrity of the parameters after setting them, by default True.\nTrue\n\n\n\n\n\n\n\nPipingSettings.verify_integrity()\nVerify the integrity of the parameters by ensuring they are numpy arrays and have consistent sizes.\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nValueError\nIf any parameter has more than one dimension."
  },
  {
    "objectID": "reference/ProbResult.html",
    "href": "reference/ProbResult.html",
    "title": "ProbResult",
    "section": "",
    "text": "ProbResult()\nA class to represent the result of a probabilistic analysis.\nAttributes h : float or None Water level. prob_cond : float Conditional probability of failure. converged : bool Indicates whether the analysis has converged. z_val : float or None Value of the limit state function. physical_design : dict of str to float or None Physical space design point. standard_design : dict of str to float or None Standard space design point. importancefactors : dict of str to float or None Importance factors. functionevals : int Number of function evaluations. mechanism : str or None Type of the limit state function.\n\n\n\n\n\nName\nDescription\n\n\n\n\nconverged\nbool(x) -&gt; bool\n\n\nfunctionevals\nint([x]) -&gt; integer\n\n\nh\n\n\n\nimportancefactors\n\n\n\nmechanism\n\n\n\nphysical_design\n\n\n\nprob_cond\n\n\n\nstandard_design\n\n\n\nz_val\n\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nfrom_FORM_result\nCreate a ProbResult from a FORM analysis.\n\n\nfrom_sim_result\nCreate a ProbResult from a simulation analysis.\n\n\n\n\n\nProbResult.from_FORM_result(h, optimAlgo, otzfunc, result, z_type)\nCreate a ProbResult from a FORM analysis.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nh\nfloat\nWater level.\nrequired\n\n\noptimAlgo\not.AbdoRackwitz or ot.Cobyla\nOptimization algorithm used in the FORM analysis.\nrequired\n\n\notzfunc\not.Function\nOpenTURNS Python function representing the limit state function.\nrequired\n\n\nresult\not.FORMResult\nResult of the FORM analysis.\nrequired\n\n\nz_type\nstr\nType of the limit state function.\nrequired\n\n\n\n\n\n\n\nProbResult.from_sim_result(h, algo, otzfunc, distribution, result, z_type)\nCreate a ProbResult from a simulation analysis.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nh\nfloat\nWater level.\nrequired\n\n\nalgo\not.ProbabilitySimulationAlgorithm or ot.DirectionalSampling\nSimulation algorithm used in the analysis.\nrequired\n\n\notzfunc\not.PythonFunction or ot.MemoizeFunction\nOpenTURNS Python function representing the limit state function.\nrequired\n\n\ndistribution\not.ComposedDistribution\nDistribution of the input variables.\nrequired\n\n\nresult\not.OptimizationResult\nResult of the simulation analysis.\nrequired\n\n\nz_type\nstr\nType of the limit state function.\nrequired"
  },
  {
    "objectID": "reference/ProbResult.html#attributes",
    "href": "reference/ProbResult.html#attributes",
    "title": "ProbResult",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nconverged\nbool(x) -&gt; bool\n\n\nfunctionevals\nint([x]) -&gt; integer\n\n\nh\n\n\n\nimportancefactors\n\n\n\nmechanism\n\n\n\nphysical_design\n\n\n\nprob_cond\n\n\n\nstandard_design\n\n\n\nz_val"
  },
  {
    "objectID": "reference/ProbResult.html#methods",
    "href": "reference/ProbResult.html#methods",
    "title": "ProbResult",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nfrom_FORM_result\nCreate a ProbResult from a FORM analysis.\n\n\nfrom_sim_result\nCreate a ProbResult from a simulation analysis.\n\n\n\n\n\nProbResult.from_FORM_result(h, optimAlgo, otzfunc, result, z_type)\nCreate a ProbResult from a FORM analysis.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nh\nfloat\nWater level.\nrequired\n\n\noptimAlgo\not.AbdoRackwitz or ot.Cobyla\nOptimization algorithm used in the FORM analysis.\nrequired\n\n\notzfunc\not.Function\nOpenTURNS Python function representing the limit state function.\nrequired\n\n\nresult\not.FORMResult\nResult of the FORM analysis.\nrequired\n\n\nz_type\nstr\nType of the limit state function.\nrequired\n\n\n\n\n\n\n\nProbResult.from_sim_result(h, algo, otzfunc, distribution, result, z_type)\nCreate a ProbResult from a simulation analysis.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nh\nfloat\nWater level.\nrequired\n\n\nalgo\not.ProbabilitySimulationAlgorithm or ot.DirectionalSampling\nSimulation algorithm used in the analysis.\nrequired\n\n\notzfunc\not.PythonFunction or ot.MemoizeFunction\nOpenTURNS Python function representing the limit state function.\nrequired\n\n\ndistribution\not.ComposedDistribution\nDistribution of the input variables.\nrequired\n\n\nresult\not.OptimizationResult\nResult of the simulation analysis.\nrequired\n\n\nz_type\nstr\nType of the limit state function.\nrequired"
  },
  {
    "objectID": "reference/ProbPipingBase.html",
    "href": "reference/ProbPipingBase.html",
    "title": "ProbPipingBase",
    "section": "",
    "text": "ProbPipingBase()\nBase class for probabilistic piping calculations.\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\nprogress\nbool\nFlag to indicate if progress should be shown.\n\n\ndebug\nbool\nFlag to indicate if debug information should be printed.\n\n\nrel_stochasts\nRelevantStochasts\nRelevant stochastic variables for different types of analyses."
  },
  {
    "objectID": "reference/ProbPipingBase.html#attributes",
    "href": "reference/ProbPipingBase.html#attributes",
    "title": "ProbPipingBase",
    "section": "",
    "text": "Name\nType\nDescription\n\n\n\n\nprogress\nbool\nFlag to indicate if progress should be shown.\n\n\ndebug\nbool\nFlag to indicate if debug information should be printed.\n\n\nrel_stochasts\nRelevantStochasts\nRelevant stochastic variables for different types of analyses."
  },
  {
    "objectID": "reference/RelevantStochasts.html",
    "href": "reference/RelevantStochasts.html",
    "title": "RelevantStochasts",
    "section": "",
    "text": "RelevantStochasts()\nDataclass to hold relevant stochastic variables for different types of analyses.\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\nalgemeen\nlist of str\nGeneral stochastic variables.\n\n\nuplift\nlist of str\nStochastic variables relevant for uplift analysis.\n\n\nheave\nlist of str\nStochastic variables relevant for heave analysis.\n\n\nsellmeijer\nlist of str\nStochastic variables relevant for Sellmeijer analysis.\n\n\ncombi\nlist of str\nCombined stochastic variables for combined analyses."
  },
  {
    "objectID": "reference/RelevantStochasts.html#attributes",
    "href": "reference/RelevantStochasts.html#attributes",
    "title": "RelevantStochasts",
    "section": "",
    "text": "Name\nType\nDescription\n\n\n\n\nalgemeen\nlist of str\nGeneral stochastic variables.\n\n\nuplift\nlist of str\nStochastic variables relevant for uplift analysis.\n\n\nheave\nlist of str\nStochastic variables relevant for heave analysis.\n\n\nsellmeijer\nlist of str\nStochastic variables relevant for Sellmeijer analysis.\n\n\ncombi\nlist of str\nCombined stochastic variables for combined analyses."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Probabilistic piping",
    "section": "",
    "text": "This package contains core functionality for probabilistic piping calculations. Probabilistic piping is developed by HKV and is published under de GNU GPL-3 license."
  },
  {
    "objectID": "reference/ProbInput.html",
    "href": "reference/ProbInput.html",
    "title": "ProbInput",
    "section": "",
    "text": "ProbInput()\nA class to represent probabilistic input data.\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\nparams\ndict[str, float | int | str] | None\nDictionary of deterministic parameters.\n\n\nstochasten\ndict[str, object] | None\nDictionary of stochastic distributions.\n\n\nkarvals\ndict[str, float] | None\nDictionary of characteristic values.\n\n\ncalc_options\ndict[str, float | int | str] | None\nDictionary of calculation options.\n\n\nhlist\nlist[float] | None\nList of water levels.\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\ncreate_stochast\nCreate a stochastic distribution.\n\n\nfrom_dataframe\nCreate a ProbInput instance from a pandas DataFrame.\n\n\nvalidate_stdev\nValidate the standard deviation of a stochastic variable.\n\n\n\n\n\nProbInput.create_stochast(dist_type, mu, sigma, shift, afknot_l, afknot_r)\nCreate a stochastic distribution.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ndist_type\nstr\nType of the distribution (e.g., “normaal”, “lognormaal”).\nrequired\n\n\nmu\nfloat\nMean value of the distribution.\nrequired\n\n\nsigma\nfloat\nStandard deviation of the distribution.\nrequired\n\n\nshift\nfloat\nShift value of the distribution.\nrequired\n\n\nafknot_l\nfloat\nLeft truncation value.\nrequired\n\n\nafknot_r\nfloat\nRight truncation value.\nrequired\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\not.Distribution or ot.TruncatedDistribution\nCreated distribution.\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nValueError\nIf the distribution type is unknown.\n\n\n\n\n\n\n\nProbInput.from_dataframe(df)\nCreate a ProbInput instance from a pandas DataFrame.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ndf\npd.DataFrame\nDataFrame containing the probabilistic piping input data.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nProbInput\nAn instance of the ProbInput class.\n\n\n\n\n\n\n\nProbInput.validate_stdev(stochast, mean, spread, spread_type, stdev)\nValidate the standard deviation of a stochastic variable.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nstochast\nstr\nName of the stochastic variable.\nrequired\n\n\nmean\nfloat\nMean value of the stochastic variable.\nrequired\n\n\nspread\nfloat\nSpread value of the stochastic variable.\nrequired\n\n\nspread_type\nstr\nType of spread (e.g., “standaardafwijking” or “variatiecoefficient”).\nrequired\n\n\nstdev\nfloat\nStandard deviation of the stochastic variable.\nrequired\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nValueError\nIf the spread and standard deviation are inconsistent."
  },
  {
    "objectID": "reference/ProbInput.html#attributes",
    "href": "reference/ProbInput.html#attributes",
    "title": "ProbInput",
    "section": "",
    "text": "Name\nType\nDescription\n\n\n\n\nparams\ndict[str, float | int | str] | None\nDictionary of deterministic parameters.\n\n\nstochasten\ndict[str, object] | None\nDictionary of stochastic distributions.\n\n\nkarvals\ndict[str, float] | None\nDictionary of characteristic values.\n\n\ncalc_options\ndict[str, float | int | str] | None\nDictionary of calculation options.\n\n\nhlist\nlist[float] | None\nList of water levels."
  },
  {
    "objectID": "reference/ProbInput.html#methods",
    "href": "reference/ProbInput.html#methods",
    "title": "ProbInput",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\ncreate_stochast\nCreate a stochastic distribution.\n\n\nfrom_dataframe\nCreate a ProbInput instance from a pandas DataFrame.\n\n\nvalidate_stdev\nValidate the standard deviation of a stochastic variable.\n\n\n\n\n\nProbInput.create_stochast(dist_type, mu, sigma, shift, afknot_l, afknot_r)\nCreate a stochastic distribution.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ndist_type\nstr\nType of the distribution (e.g., “normaal”, “lognormaal”).\nrequired\n\n\nmu\nfloat\nMean value of the distribution.\nrequired\n\n\nsigma\nfloat\nStandard deviation of the distribution.\nrequired\n\n\nshift\nfloat\nShift value of the distribution.\nrequired\n\n\nafknot_l\nfloat\nLeft truncation value.\nrequired\n\n\nafknot_r\nfloat\nRight truncation value.\nrequired\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\not.Distribution or ot.TruncatedDistribution\nCreated distribution.\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nValueError\nIf the distribution type is unknown.\n\n\n\n\n\n\n\nProbInput.from_dataframe(df)\nCreate a ProbInput instance from a pandas DataFrame.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\ndf\npd.DataFrame\nDataFrame containing the probabilistic piping input data.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nProbInput\nAn instance of the ProbInput class.\n\n\n\n\n\n\n\nProbInput.validate_stdev(stochast, mean, spread, spread_type, stdev)\nValidate the standard deviation of a stochastic variable.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nstochast\nstr\nName of the stochastic variable.\nrequired\n\n\nmean\nfloat\nMean value of the stochastic variable.\nrequired\n\n\nspread\nfloat\nSpread value of the stochastic variable.\nrequired\n\n\nspread_type\nstr\nType of spread (e.g., “standaardafwijking” or “variatiecoefficient”).\nrequired\n\n\nstdev\nfloat\nStandard deviation of the stochastic variable.\nrequired\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nValueError\nIf the spread and standard deviation are inconsistent."
  },
  {
    "objectID": "reference/ProbPipingFixedWaterlevel.html",
    "href": "reference/ProbPipingFixedWaterlevel.html",
    "title": "ProbPipingFixedWaterlevel",
    "section": "",
    "text": "ProbPipingFixedWaterlevel()\nClass for probabilistic piping calculations with a fixed water level.\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\nprogress\nbool\nFlag to indicate if progress should be shown.\n\n\ndebug\nbool\nFlag to indicate if debug information should be printed.\n\n\nrel_stochasts\nRelevantStochasts\nRelevant stochastic variables for different types of analyses.\n\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nfixed_waterlevel_failureprobability\nCalculate the failure probability for a fixed water level.\n\n\nfixed_waterlevel_fragilitycurve\nCalculate the fragility curve for a fixed water level.\n\n\nfixed_waterlevel_semiprob\nPerform semi-probabilistic calculations for a constant water level.\n\n\n\n\n\nProbPipingFixedWaterlevel.fixed_waterlevel_failureprobability(\n    prob_input,\n    h=None,\n    settings=None,\n    z_type='sellmeijer',\n    copula=None,\n    leave=True,\n)\nCalculate the failure probability for a fixed water level.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nprob_input\nProbInput\nProbabilistic input settings.\nrequired\n\n\nh\nfloat or None\nWater level, by default None.\nNone\n\n\nsettings\nPipingSettings or None\nPiping settings, by default None.\nNone\n\n\nz_type\nstr\nType of the limit state function, by default “sellmeijer”.\n'sellmeijer'\n\n\ncopula\not.Distribution or None\nCopula distribution, by default None.\nNone\n\n\nleave\nbool\nIf True, remove the progress bar, by default True\nTrue\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\ntuple\nUpdated settings and results of the failure probability calculations.\n\n\n\n\n\n\n\nProbPipingFixedWaterlevel.fixed_waterlevel_fragilitycurve(\n    prob_input,\n    hlist=None,\n    settings=None,\n    z_type='sellmeijer',\n    copula=None,\n)\nCalculate the fragility curve for a fixed water level.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nprob_input\nProbInput\nProbabilistic input settings.\nrequired\n\n\nhlist\nlist of float or None\nList of water levels, by default None.\nNone\n\n\nsettings\nPipingSettings or None\nPiping settings, by default None.\nNone\n\n\nz_type\nstr\nType of the limit state function, by default “sellmeijer”.\n'sellmeijer'\n\n\ncopula\not.Distribution or None\nCopula distribution, by default None.\nNone\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\ntuple\nUpdated settings and results of the fragility curve calculations.\n\n\n\n\n\n\n\nProbPipingFixedWaterlevel.fixed_waterlevel_semiprob(\n    prob_input,\n    settings=None,\n    h=None,\n)\nPerform semi-probabilistic calculations for a constant water level.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nprob_input\nProbInput\nProbabilistic input settings.\nrequired\n\n\nsettings\nPipingSettings or None\nPiping settings, by default None.\nNone\n\n\nh\nfloat or None\nWater level, by default None.\nNone\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\npd.DataFrame\nDataFrame containing the results of the calculations."
  },
  {
    "objectID": "reference/ProbPipingFixedWaterlevel.html#attributes",
    "href": "reference/ProbPipingFixedWaterlevel.html#attributes",
    "title": "ProbPipingFixedWaterlevel",
    "section": "",
    "text": "Name\nType\nDescription\n\n\n\n\nprogress\nbool\nFlag to indicate if progress should be shown.\n\n\ndebug\nbool\nFlag to indicate if debug information should be printed.\n\n\nrel_stochasts\nRelevantStochasts\nRelevant stochastic variables for different types of analyses."
  },
  {
    "objectID": "reference/ProbPipingFixedWaterlevel.html#methods",
    "href": "reference/ProbPipingFixedWaterlevel.html#methods",
    "title": "ProbPipingFixedWaterlevel",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nfixed_waterlevel_failureprobability\nCalculate the failure probability for a fixed water level.\n\n\nfixed_waterlevel_fragilitycurve\nCalculate the fragility curve for a fixed water level.\n\n\nfixed_waterlevel_semiprob\nPerform semi-probabilistic calculations for a constant water level.\n\n\n\n\n\nProbPipingFixedWaterlevel.fixed_waterlevel_failureprobability(\n    prob_input,\n    h=None,\n    settings=None,\n    z_type='sellmeijer',\n    copula=None,\n    leave=True,\n)\nCalculate the failure probability for a fixed water level.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nprob_input\nProbInput\nProbabilistic input settings.\nrequired\n\n\nh\nfloat or None\nWater level, by default None.\nNone\n\n\nsettings\nPipingSettings or None\nPiping settings, by default None.\nNone\n\n\nz_type\nstr\nType of the limit state function, by default “sellmeijer”.\n'sellmeijer'\n\n\ncopula\not.Distribution or None\nCopula distribution, by default None.\nNone\n\n\nleave\nbool\nIf True, remove the progress bar, by default True\nTrue\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\ntuple\nUpdated settings and results of the failure probability calculations.\n\n\n\n\n\n\n\nProbPipingFixedWaterlevel.fixed_waterlevel_fragilitycurve(\n    prob_input,\n    hlist=None,\n    settings=None,\n    z_type='sellmeijer',\n    copula=None,\n)\nCalculate the fragility curve for a fixed water level.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nprob_input\nProbInput\nProbabilistic input settings.\nrequired\n\n\nhlist\nlist of float or None\nList of water levels, by default None.\nNone\n\n\nsettings\nPipingSettings or None\nPiping settings, by default None.\nNone\n\n\nz_type\nstr\nType of the limit state function, by default “sellmeijer”.\n'sellmeijer'\n\n\ncopula\not.Distribution or None\nCopula distribution, by default None.\nNone\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\ntuple\nUpdated settings and results of the fragility curve calculations.\n\n\n\n\n\n\n\nProbPipingFixedWaterlevel.fixed_waterlevel_semiprob(\n    prob_input,\n    settings=None,\n    h=None,\n)\nPerform semi-probabilistic calculations for a constant water level.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nprob_input\nProbInput\nProbabilistic input settings.\nrequired\n\n\nsettings\nPipingSettings or None\nPiping settings, by default None.\nNone\n\n\nh\nfloat or None\nWater level, by default None.\nNone\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\npd.DataFrame\nDataFrame containing the results of the calculations."
  },
  {
    "objectID": "reference/index.html",
    "href": "reference/index.html",
    "title": "API Reference",
    "section": "",
    "text": "Piping\n\n\n\nPipingSettings\nA dataclass to store various settings and parameters related to piping calculations.\n\n\nProbPipingBase\nBase class for probabilistic piping calculations.\n\n\nRelevantStochasts\nDataclass to hold relevant stochastic variables for different types of analyses.\n\n\nProbPipingFixedWaterlevel\nClass for probabilistic piping calculations with a fixed water level.\n\n\nProbPipingFixedWaterlevelSimple\nClass for simple probabilistic piping calculations with a fixed water level.\n\n\nProbInput\nA class to represent probabilistic input data.\n\n\nProbResult\nA class to represent the result of a probabilistic analysis."
  },
  {
    "objectID": "reference/index.html#probabilistic_piping",
    "href": "reference/index.html#probabilistic_piping",
    "title": "API Reference",
    "section": "",
    "text": "Piping\n\n\n\nPipingSettings\nA dataclass to store various settings and parameters related to piping calculations.\n\n\nProbPipingBase\nBase class for probabilistic piping calculations.\n\n\nRelevantStochasts\nDataclass to hold relevant stochastic variables for different types of analyses.\n\n\nProbPipingFixedWaterlevel\nClass for probabilistic piping calculations with a fixed water level.\n\n\nProbPipingFixedWaterlevelSimple\nClass for simple probabilistic piping calculations with a fixed water level.\n\n\nProbInput\nA class to represent probabilistic input data.\n\n\nProbResult\nA class to represent the result of a probabilistic analysis."
  },
  {
    "objectID": "reference/Piping.html",
    "href": "reference/Piping.html",
    "title": "Piping",
    "section": "",
    "text": "Piping()\n\n\n\n\n\nName\nDescription\n\n\n\n\nF_geo\nFactor geo.\n\n\nF_res\nFactor resistance.\n\n\nF_scale\nFactor scale.\n\n\nH_c\nKritieke verval.\n\n\nZ_all\nOverkoepelende grenstoestandsfunctie piping voor alle deelfaalmechanismen.\n\n\nZ_h\nGrenstoestandsfunctie heave.\n\n\nZ_p\nGrenstoestandsfunctie sellmeijer.\n\n\nZ_u\nGrenstoestandsfunctie uplift.\n\n\ndelta_phi_cu\nHet kritieke stijghoogteverschil voor opbarsten.\n\n\nphi_exit\nStijghoogte in de watervoerende laag bij het uittredepunt.\n\n\nstijghoogte\nGenerieke stijghoogte berekening.\n\n\nstijghoogte_responsfactor\nStijghoogte in de watervoerende laag bij het uittredepunt.\n\n\nverval\nBerekening van het verval.\n\n\n\n\n\nPiping.F_geo(settings)\nFactor geo.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsettings\nPipingSettings\nInstellingen voor piping berekeningen.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nFactor geo.\n\n\n\n\n\n\n\nPiping.F_res(settings)\nFactor resistance.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsettings\nPipingSettings\nInstellingen voor piping berekeningen.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nFactor resistance.\n\n\n\n\n\n\n\nPiping.F_scale(settings)\nFactor scale.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsettings\nPipingSettings\nInstellingen voor piping berekeningen.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nFactor scale.\n\n\n\n\n\n\n\nPiping.H_c(settings)\nKritieke verval.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsettings\nPipingSettings\nInstellingen voor piping berekeningen.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nKritieke verval.\n\n\n\n\n\n\n\nPiping.Z_all(settings)\nOverkoepelende grenstoestandsfunctie piping voor alle deelfaalmechanismen.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsettings\nPipingSettings\nInstellingen voor piping berekeningen.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nOverkoepelende grenstoestandsfunctie.\n\n\n\n\n\n\n\nPiping.Z_h(settings)\nGrenstoestandsfunctie heave.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsettings\nPipingSettings\nInstellingen voor piping berekeningen.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nGrenstoestandsfunctie heave.\n\n\n\n\n\n\n\nPiping.Z_p(settings)\nGrenstoestandsfunctie sellmeijer.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsettings\nPipingSettings\nInstellingen voor piping berekeningen.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nGrenstoestandsfunctie sellmeijer.\n\n\n\n\n\n\n\nPiping.Z_u(settings)\nGrenstoestandsfunctie uplift.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsettings\nPipingSettings\nInstellingen voor piping berekeningen.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nGrenstoestandsfunctie uplift.\n\n\n\n\n\n\n\nPiping.delta_phi_cu(settings)\nHet kritieke stijghoogteverschil voor opbarsten.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsettings\nPipingSettings\nInstellingen voor piping berekeningen.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nKritieke stijghoogteverschil.\n\n\n\n\n\n\n\nPiping.phi_exit(settings)\nStijghoogte in de watervoerende laag bij het uittredepunt.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsettings\nPipingSettings\nInstellingen voor piping berekeningen.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nStijghoogte bij het uittredepunt.\n\n\n\n\n\n\n\nPiping.stijghoogte(h_exit, r_exit, h)\nGenerieke stijghoogte berekening.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nh_exit\nfloat or np.ndarray\nKwelslootpeil bij uitgang [m+NAP].\nrequired\n\n\nr_exit\nfloat or np.ndarray\nDempingsfactor bij uitgang [-].\nrequired\n\n\nh\nfloat or np.ndarray\nBuitenwaterstand [m+NAP].\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nBerekende stijghoogte.\n\n\n\n\n\n\n\nPiping.stijghoogte_responsfactor(waterstand, settings)\nStijghoogte in de watervoerende laag bij het uittredepunt.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nwaterstand\nfloat or np.ndarray\nBuitenwaterstand [m+NAP].\nrequired\n\n\nsettings\nPipingSettings\nInstellingen voor piping berekeningen.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nStijghoogte bij het uittredepunt.\n\n\n\n\n\n\n\nPiping.verval(h, h_exit, r_c, D_cover)\nBerekening van het verval.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nh\nfloat or np.ndarray\nBuitenwaterstand [m+NAP].\nrequired\n\n\nh_exit\nfloat or np.ndarray\nKwelslootpeil bij uitgang [m+NAP].\nrequired\n\n\nr_c\nfloat or np.ndarray\nReductiefactor [-].\nrequired\n\n\nD_cover\nfloat or np.ndarray\nDikte deklaag [m].\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nBerekend verval."
  },
  {
    "objectID": "reference/Piping.html#methods",
    "href": "reference/Piping.html#methods",
    "title": "Piping",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nF_geo\nFactor geo.\n\n\nF_res\nFactor resistance.\n\n\nF_scale\nFactor scale.\n\n\nH_c\nKritieke verval.\n\n\nZ_all\nOverkoepelende grenstoestandsfunctie piping voor alle deelfaalmechanismen.\n\n\nZ_h\nGrenstoestandsfunctie heave.\n\n\nZ_p\nGrenstoestandsfunctie sellmeijer.\n\n\nZ_u\nGrenstoestandsfunctie uplift.\n\n\ndelta_phi_cu\nHet kritieke stijghoogteverschil voor opbarsten.\n\n\nphi_exit\nStijghoogte in de watervoerende laag bij het uittredepunt.\n\n\nstijghoogte\nGenerieke stijghoogte berekening.\n\n\nstijghoogte_responsfactor\nStijghoogte in de watervoerende laag bij het uittredepunt.\n\n\nverval\nBerekening van het verval.\n\n\n\n\n\nPiping.F_geo(settings)\nFactor geo.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsettings\nPipingSettings\nInstellingen voor piping berekeningen.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nFactor geo.\n\n\n\n\n\n\n\nPiping.F_res(settings)\nFactor resistance.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsettings\nPipingSettings\nInstellingen voor piping berekeningen.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nFactor resistance.\n\n\n\n\n\n\n\nPiping.F_scale(settings)\nFactor scale.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsettings\nPipingSettings\nInstellingen voor piping berekeningen.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nFactor scale.\n\n\n\n\n\n\n\nPiping.H_c(settings)\nKritieke verval.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsettings\nPipingSettings\nInstellingen voor piping berekeningen.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nKritieke verval.\n\n\n\n\n\n\n\nPiping.Z_all(settings)\nOverkoepelende grenstoestandsfunctie piping voor alle deelfaalmechanismen.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsettings\nPipingSettings\nInstellingen voor piping berekeningen.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nOverkoepelende grenstoestandsfunctie.\n\n\n\n\n\n\n\nPiping.Z_h(settings)\nGrenstoestandsfunctie heave.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsettings\nPipingSettings\nInstellingen voor piping berekeningen.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nGrenstoestandsfunctie heave.\n\n\n\n\n\n\n\nPiping.Z_p(settings)\nGrenstoestandsfunctie sellmeijer.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsettings\nPipingSettings\nInstellingen voor piping berekeningen.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nGrenstoestandsfunctie sellmeijer.\n\n\n\n\n\n\n\nPiping.Z_u(settings)\nGrenstoestandsfunctie uplift.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsettings\nPipingSettings\nInstellingen voor piping berekeningen.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nGrenstoestandsfunctie uplift.\n\n\n\n\n\n\n\nPiping.delta_phi_cu(settings)\nHet kritieke stijghoogteverschil voor opbarsten.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsettings\nPipingSettings\nInstellingen voor piping berekeningen.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nKritieke stijghoogteverschil.\n\n\n\n\n\n\n\nPiping.phi_exit(settings)\nStijghoogte in de watervoerende laag bij het uittredepunt.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nsettings\nPipingSettings\nInstellingen voor piping berekeningen.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nStijghoogte bij het uittredepunt.\n\n\n\n\n\n\n\nPiping.stijghoogte(h_exit, r_exit, h)\nGenerieke stijghoogte berekening.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nh_exit\nfloat or np.ndarray\nKwelslootpeil bij uitgang [m+NAP].\nrequired\n\n\nr_exit\nfloat or np.ndarray\nDempingsfactor bij uitgang [-].\nrequired\n\n\nh\nfloat or np.ndarray\nBuitenwaterstand [m+NAP].\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nBerekende stijghoogte.\n\n\n\n\n\n\n\nPiping.stijghoogte_responsfactor(waterstand, settings)\nStijghoogte in de watervoerende laag bij het uittredepunt.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nwaterstand\nfloat or np.ndarray\nBuitenwaterstand [m+NAP].\nrequired\n\n\nsettings\nPipingSettings\nInstellingen voor piping berekeningen.\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nStijghoogte bij het uittredepunt.\n\n\n\n\n\n\n\nPiping.verval(h, h_exit, r_c, D_cover)\nBerekening van het verval.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nh\nfloat or np.ndarray\nBuitenwaterstand [m+NAP].\nrequired\n\n\nh_exit\nfloat or np.ndarray\nKwelslootpeil bij uitgang [m+NAP].\nrequired\n\n\nr_c\nfloat or np.ndarray\nReductiefactor [-].\nrequired\n\n\nD_cover\nfloat or np.ndarray\nDikte deklaag [m].\nrequired\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\n\n\n\n\n\nfloat or np.ndarray\nBerekend verval."
  }
]